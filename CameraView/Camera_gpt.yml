name: Android CI

on:
  push:
    branches:
      - master
      - /^v\d+\.\d+\.\d+$/  # 匹配版本标签 v1.2.3
      - /^v\d+\.\d+\.\d+-beta\d+$/  # 匹配 beta 版本标签 v1.2.3-beta1
      - /^v\d+\.\d+\.\d+-rc\d+$/  # 匹配 rc 版本标签 v1.2.3-rc1
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest  # 使用 Ubuntu 最新版本的 GitHub Actions 执行环境

    env:
      EMULATOR_API: 22
      EMULATOR_ABI: x86_64
      EMULATOR_TAG: default
      PATH: ${{ github.workspace }}/android-sdk:$PATH  # 设置 Android SDK 路径

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          sdk-version: '28'
          build-tools-version: '28.0.3'
          components: |
            tools
            platform-tools
            build-tools-28.0.3
            android-28
            doc-28

      # Step 3: Install Emulator system image and tools
      - name: Install Emulator
        run: |
          echo "yes" | sdkmanager --sdk_root=$ANDROID_HOME "platforms;android-$EMULATOR_API"
          echo "yes" | sdkmanager --sdk_root=$ANDROID_HOME --channel=4 "system-images;android-$EMULATOR_API;$EMULATOR_TAG;$EMULATOR_ABI"
          sdkmanager --list || true  # Check everything is updated

      # Step 4: Create Emulator Virtual Device
      - name: Create and start emulator
        run: |
          export EMULATOR="$ANDROID_HOME/system-images/android-$EMULATOR_API/$EMULATOR_TAG/$EMULATOR_ABI"
          echo "no" | avdmanager create avd -n test -k "$EMULATOR" -f
          emulator -avd test -no-window -no-accel -no-snapshot -camera-back emulated -camera-front emulated -memory 2048 -writable-system &
          adb wait-for-device
          adb remount

      # Step 5: Wait for Emulator and disable animations
      - name: Wait for emulator and disable animations
        run: |
          android-wait-for-emulator
          adb shell settings put global window_animation_scale 0 &
          adb shell settings put global transition_animation_scale 0 &
          adb shell settings put global animator_duration_scale 0 &

      # Step 6: Unlock the device and configure logcat
      - name: Unlock and configure logcat
        run: |
          sleep 20
          adb shell input keyevent 82 &
          adb logcat -c  # Clear logcat
          adb logcat Test:V TestRunner:V CameraView:V CameraController:V Camera1:V WorkerHandler:V THREAD_STATE:S *:E &

      # Step 7: Run Gradle build and tests
      - name: Build and run tests
        run: |
          ./gradlew clean demo:assembleDebug cameraview:testDebugUnitTest cameraview:connectedCheck cameraview:mergedCoverageReport cameraview:javadoc

      # Step 8: Upload coverage report
      - name: Upload coverage report
        run: |
          bash <(curl -s https://codecov.io/bash) -s "*/build/reports/mergedCoverageReport/"

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure deploy only runs after the build job completes successfully

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Gradle
        uses: gradle/wrapper-validation-action@v1

      - name: Deploy to Bintray
        run: ./gradlew bintrayUpload
        env:
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
        if: github.ref == 'refs/heads/master' && startsWith(github.ref, 'refs/tags/')
